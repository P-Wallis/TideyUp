[gd_resource type="VisualShader" load_steps=11 format=2]

[ext_resource path="res://Sprites/Level.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "texture"

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "screen_texture"

[sub_resource type="VisualShaderNodeTexture" id=9]
source = 5

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id=11]
source = 5
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeColorOp" id=5]

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = ExtResource( 1 )

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_vtx_4;



void vertex() {
// Texture:4
	vec4 tex_vtx_4_read = texture(tex_vtx_4, UV.xy);
	vec3 n_out4p0 = tex_vtx_4_read.rgb;
	float n_out4p1 = tex_vtx_4_read.a;

// ColorOp:3
	vec3 n_in3p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out3p0 = vec3(1.0) - (vec3(1.0) - n_out4p0) * (vec3(1.0) - n_in3p1);

// Output:0
	COLOR.rgb = n_out3p0;

}

void fragment() {
// Input:7
	vec3 n_out7p0 = vec3(SCREEN_UV, 0.0);

// Input:4

// Texture:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 SCREEN_TEXTURE_tex_read = texture(SCREEN_TEXTURE, n_out7p0.xy);
		n_out6p0 = SCREEN_TEXTURE_tex_read.rgb;
		n_out6p1 = SCREEN_TEXTURE_tex_read.a;
	}

// Input:10
	vec3 n_out10p0 = vec3(UV, 0.0);

// Input:12

// Texture:9
	vec3 n_out9p0;
	float n_out9p1;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, n_out10p0.xy);
		n_out9p0 = TEXTURE_tex_read.rgb;
		n_out9p1 = TEXTURE_tex_read.a;
	}

// VectorOp:11
	vec3 n_out11p0 = n_out6p0 * n_out9p0;

// Output:0
	COLOR.rgb = n_out11p0;
	COLOR.a = n_out9p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1054.26, -300 )
mode = 1
flags/light_only = false
nodes/vertex/3/node = SubResource( 5 )
nodes/vertex/3/position = Vector2( 60, 220 )
nodes/vertex/4/node = SubResource( 6 )
nodes/vertex/4/position = Vector2( -260, 60 )
nodes/vertex/connections = PoolIntArray( 3, 0, 0, 2, 4, 0, 3, 0 )
nodes/fragment/0/position = Vector2( 140, 360 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( -1200, 220 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( -680, 60 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( -1220, 40 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( -680, 520 )
nodes/fragment/10/node = SubResource( 7 )
nodes/fragment/10/position = Vector2( -1620, 480 )
nodes/fragment/11/node = SubResource( 12 )
nodes/fragment/11/position = Vector2( -260, 140 )
nodes/fragment/12/node = SubResource( 13 )
nodes/fragment/12/position = Vector2( -940, 600 )
nodes/fragment/connections = PoolIntArray( 4, 0, 6, 2, 9, 1, 0, 1, 6, 0, 11, 0, 9, 0, 11, 1, 11, 0, 0, 0, 7, 0, 6, 0, 10, 0, 9, 0, 12, 0, 9, 2 )
