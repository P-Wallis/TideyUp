[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[ext_resource path="res://Sprites/Level.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "color"

[sub_resource type="VisualShaderNodeColorOp" id=5]

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = ExtResource( 1 )

[sub_resource type="VisualShader" id=2]
code = "shader_type canvas_item;
uniform sampler2D tex_vtx_4;



void vertex() {
// Texture:4
	vec4 tex_vtx_4_read = texture(tex_vtx_4, UV.xy);
	vec3 n_out4p0 = tex_vtx_4_read.rgb;
	float n_out4p1 = tex_vtx_4_read.a;

// ColorOp:3
	vec3 n_in3p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out3p0 = vec3(1.0) - (vec3(1.0) - n_out4p0) * (vec3(1.0) - n_in3p1);

// Output:0
	COLOR.rgb = n_out3p0;

}

void fragment() {
// ColorOp:2
	vec3 n_in2p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in2p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out2p0 = min(n_in2p0, n_in2p1);

// Input:3
	vec3 n_out3p0 = COLOR.rgb;

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -303.583, -35.0833 )
mode = 1
flags/light_only = false
nodes/vertex/3/node = SubResource( 5 )
nodes/vertex/3/position = Vector2( 60, 220 )
nodes/vertex/4/node = SubResource( 6 )
nodes/vertex/4/position = Vector2( -260, 60 )
nodes/vertex/connections = PoolIntArray( 3, 0, 0, 2, 4, 0, 3, 0 )
nodes/fragment/0/position = Vector2( 340, 300 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -40, 320 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( 122, 537 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 0, 1 )

[resource]
shader = SubResource( 2 )
